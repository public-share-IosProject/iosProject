var vmData = {
    newWinCmd: 'demand://', //新建窗口的标识
    preUrl: 'http://www.renrenshangjin.com/', //图片前缀
    defaultHeadImg: 'img/user_header.png', //用户默认头像
    smImg: '%23S%23.', //小图片标识
    respLength: 8,
    boyImg: 'img/index/boy.png',
    girlImg: 'img/index/girl.png'
};

var wb, vm;
// 页面加载后执行
var load = function() {
    vm = new Vue({
        el: '#vIndex',

        data: function() {
            return {
                item: [],
                curPage: 1,
                finish: false,
                range: 1,
                order: 3,
                preUrl: vmData.preUrl,
                newWinCmd: vmData.newWinCmd,
                smImg: vmData.smImg,
                boyImg: vmData.boyImg,
                girlImg: vmData.girlImg,
                firstLoadCity: true,
                cityInfo: {
                },
                dis: {
                    latitude: 0,
                    longitude: 0
                },
            };
        },

        created: function() {
            this.keepLocation();
        },

        methods: {
            fetchCityData: function(callback) {
                var data = wb.getData();
                if (data == null) data = {};
                if (data.cityInfo == undefined || data.cityInfo == null) {
                    wb.Location(function(city) {
                        if (city != null && city.id != -2) {

                            var cityInfo = {
                                city_name: city.addr,
                                city_id: city.id
                            };

                            data.cityInfo = cityInfo;
                            $('#city-name').text(data.cityInfo.city_name);

                            wb.setData(data, callback(cityInfo.city_id));
                        } else {
                            data.cityInfo = {
                              city_name: '福州',
                              city_id: 44
                            }

                            $('#city-name').text(data.cityInfo.city_name)
                            wb.setData(data, callback(data.cityInfo.city_id))
                            wb.showTip('获取当前所在城市失败,请检查是否已开启手机定位权限')
                        }
                    }, true);
                } else {
                    $('#city-name').text(data.cityInfo.city_name);
                    callback(data.cityInfo.city_id);
                }
            },
            /**
             * 加载城市信息
             * @return {[type]} [description]
             */
            loadCityInfo: function(callback) {
                var self = this;
                var data = wb.getData();
                if (data == null) data = {};

                wb.Location(function(city) {
                    if (city != null) {
                        self.cityInfo.city_name = city.addr;
                        self.cityInfo.city_id = city.id;
                        data.city_id = city.id;
                        wb.setData(data, function(){});
                        if (callback) {
                            callback();
                        }
                    } else {
                        wb.showTip('获取所在城市信息失败');
                    }
                }, true);
            },

            keepLocation: function() {
                var self = this;
                wb.Location(function(city){
                    if (city != null) {
                        self.dis.latitude = city.latitude;
                        self.dis.longitude = city.lontitude;
                    }
                });
            },

            /**
             * 下拉加载新数据
             * @param  {object} me dropload对象
             * @return
             */
            loadDownData: function(me) {
                var self = this;

                if (self.finish !== true) {
                    self.fetchCityData(function(city_id) {
                        var params = {
                            url: 'http://www.renrenshangjin.com/index.php?m=Home&c=Index&a=getHomeTask',
                            ZYRJM: window.webEvn.token,
                            curPage: self.curPage,
                            range: self.range,
                            order: self.order,
                            city_id: city_id
                        };

                        wb.Ajax(params, function(data) {
                            if (data.status == 1) {
                                if (data.tasks !== null && data.tasks.length !== 0) {
                                    self.curPage++;
                                    $('.content').append(self.dataProcessor(data.tasks));
                                } else {
                                    self.finish = true;
                                    me.noData();
                                }
                            } else {
                                wb.showTip(data.info);
                                me.noData();
                            }
                            me.resetload();
                        });
                    })
                } else {
                    me.noData();
                    me.resetload();
                }
            },

            /**
             * 上滑追加数据
             * @param  {object} me dropload对象
             * @return
             */
            loadUpData: function(me) {
                var self = this;

                self.finish = false;
                self.$set('item', []);
                self.curPage = 1;

                self.fetchCityData(function(city_id) {
                    var params = {
                        url: 'http://www.renrenshangjin.com//index.php?m=Home&c=Index&a=getHomeTask',
                        ZYRJM: window.webEvn.token,
                        curPage: self.curPage,
                        range: self.range,
                        order: self.order,
                        city_id: city_id
                    };

                    wb.Ajax(params, function(data) {
                        if (data.status == 1) {
                            if (data.tasks !== null && data.tasks.length !== 0) {
                                self.curPage++;
                                $('.content').html(self.dataProcessor(data.tasks));

                                if (data.tasks.length < vmData.respLength) {
                                    $('.dropload-noData').replaceWith('<div class="dropload-noData">任务都加载完啦</div>');
                                } else {
                                    $('.dropload-noData').replaceWith('<div class="dropload-refresh">↑上拉加载更多</div>');
                                }
                            } else {
                                $('.content').html('');
                                self.finish = true;
                                me.noData();
                            }
                        } else {
                            wb.showTip(data.info);
                            me.noData();
                        }
                        me.resetload();
                    });
                });
            },

            /**
             * 数据加工
             * @param  {array} items 数据
             * @return
             */
            dataProcessor: function(items) {
                var self = this;
                var result = '';

                items.forEach(function(item) {
                    result += self.htmlConcat(item);
                });
                return result;
            },

            /**
             * html字符串拼接
             * @param  {array} item   数据
             * @return
             */
            htmlConcat: function(item) {
                var self = this;
                var img_tmpl = '';
                var genderImg = '';

                // 任务剩余时间格式化
                var now = Date.now();
                var restSecTime = item.effictive_time * 60 - (now - item.created_at * 1000) / 1000;
                var restTime = self.formatSeconds(restSecTime);

                // 任务创建时间格式化
                var d = new Date(item.created_at * 1000);

                var minutes = parseInt(d.getMinutes());
                if (minutes === 0) {
                    minutes = '00';
                } else if (minutes < 10) {
                    minutes = '0' + minutes;
                }

                var created_at = (d.getMonth() + 1) + "月" + (d.getDate()) + "日 " + d.getHours() + ":" + minutes;

                // 头像判断
                var headImg = (item.user_image !== null && item.user_image !== '') ?
                    (self.preUrl + item.user_image.replace('\.', vmData.smImg)) : vmData.defaultHeadImg;

                // 任务图片列表模板拼接
                if (item.image_url !== null && item.image_url.length !== 0) {
                    item.image_url.forEach(function(img, index) {
                        if (index < 3) {
                            img = img.replace(/\./, self.smImg);
                            img_tmpl += '<img src="' + self.preUrl + img + '"/>';
                        }
                    });
                }

                if (item.sex == '女') {
                    genderImg = self.girlImg;
                } else {
                    genderImg = self.boyImg;
                }

                if (self.dis.latitude != undefined && self.dis.longitude != undefined &&
                    self.dis.latitude != null && self.dis.longitude != null &&
                    item.latitude != -2 && item.longitude != -2) {
                  var dis = self.rad2dis(item.latitude, item.longitude, self.dis.latitude, self.dis.longitude);
                  dis = (Number.isNaN(dis) !== true) ? dis : 0;

                  var addr;

                  if (item.short_address !== null && item.short_address !== '') {
                    addr = item.short_address + ' (' + dis + '千米)';
                  } else {
                    addr = item.address + ' (' + dis + '千米)';
                  }
                } else {
                  var dis = 0
                  var addr;

                  if (item.short_address !== null && item.short_address !== '') {
                    addr = item.short_address + ' (' + dis + '千米)';
                  } else {
                    addr = item.address + ' (' + dis + '千米)';
                  }
                }
                return '<a class="item" id="' + item.task_id + '">' +
                    '<div class="ui-row-flex ui-whitespace index_message">' +
                    '<div class="ui-col">' +
                    '<img src="' + headImg + '" class="headimg">' +
                    '</div>' +
                    '<div class="ui-col ui-col-5 item-task">' +
                    '<div class="ui-row-flex ui-whitespace msg_first">' +
                    '<div class="ui-col-3 msg_name">' +
                    '<span class="z-span-username">' + item.username + '</span>' +
                    '</div>' +
                    '<div class="ui-col-3 msg_money z-reward-wrap">' +
                    '<img src="img/index/shang.png">' +
                    '<span>' + item.reward + '</span>' +
                    '</div>' +
                    '</div>' +
                    '<div class="ui-row-flex ui-whitespace msg_second">' +
                    '<span class="level-num z-span-level">LV.' + item.level + '</span>' +
                    '<img src="' + genderImg + '" class="z-img-level">' +
                    '<div class="ui-col-3 msg_money z-resttime-wrap">' +
                    '<span>' + restTime + '</span>' +
                    '</div>' +
                    '</div>' +
                    '<div class="ui-row-flex ui-nowrap z-tasktitle-wrap">' +
                    '<span>' + item.title + '</span>' +
                    '</div>' +
                    '<div class="z-taskimg-wrap">' +
                    img_tmpl +
                    '</div>' +
                    '<div class="ui-row-flex msg_last">' +
                    '<div class="msg_date">' +
                    '<img src="img/index/time.png" class="z-icon-img">' +
                    '<span class="z-span-tasktime">' + created_at + '</span>' +
                    '</div>' +
                    '<div class="ui-col ui-col-2 msg_position">' +
                    '<img src="img/index/address.png" class="z-icon-img">' +
                    '<div class="ui-nowrap msg_address z-span-taskaddress">' + addr + '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</div>' +
                    '</a>';
            },

            // 获取并保存当前任务ID
            getCurrentId: function(task_id) {
                this.keepCurrentData(task_id);
            },

            // 保存当前任务ID,提供给下一个页面
            keepCurrentData: function(task_id) {
                var data = {
                    indexData_task_id: task_id
                };
                wb.setData(data, this.go2DemandDetail);
            },

            /**
             * 跳转至需求详情页面
             * @return
             */
            go2DemandDetail: function() {
                window.location.href = this.newWinCmd + 'demandDetail.html';
            },

            /**
             * 跳转至发布任务页面
             * @return
             */
            go2ReleaseTask: function() {
                window.location.href = this.newWinCmd + 'releaseTask.html';
            },

            /**
             * 打开侧栏
             * @return
             */
            openMune: function() {
                wb.Mune();
            },

            /**
             * 时间格式化
             * @param  {number} seconds 秒数
             * @return
             */
            formatSeconds: function(seconds) {
                var sec = parseInt(seconds);
                var minutes = 0;
                var hours = 0;

                if (sec > 60) {
                    minutes = parseInt(sec / 60);

                    if (minutes > 60) {
                        hours = parseInt(minutes / 60);
                        minutes = parseInt(minutes % 60);
                    }
                }

                var result = '剩余';

                if (hours > 0) {
                    result += hours + '小时';
                }
                if (minutes > 0) {
                    result += minutes + '分钟';
                }
                if (hours <= 0 && minutes <= 0 && sec > 0) {
                    result += sec + '秒';
                }

                result += '截止';
                return result;
            },

            /**
             * 角度转为弧度
             * @return {[type]} [description]
             */
            deg2rad: function(degree) {
                return degree * Math.PI / 180;
            },

            /**
             * 经纬度转为距离
             * @param  {[type]} lng1 [description]
             * @param  {[type]} lat1 [description]
             * @param  {[type]} lng2 [description]
             * @param  {[type]} lat2 [description]
             * @return {[type]}      [description]
             */
            rad2dis: function(lng1, lat1, lng2, lat2) {
                var radLat1 = this.deg2rad(lat1);
                var radLat2 = this.deg2rad(lat2);
                var radLng1 = this.deg2rad(lng1);
                var radLng2 = this.deg2rad(lng2);
                var par1 = radLat1 - radLat2;
                var par2 = radLng1 - radLng2;
                return Math.round((2 * Math.asin(Math.sqrt(Math.pow(Math.sin(par1 / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(par2 / 2), 2))) * 6378.137) * 100) / 100;
            },
        }
    });

    $('#range-list').on('tap', function(e) {
        $('.shutter').css({
            'display': 'none'
        });
        $('#range-msg ').text(e.target.innerText);
        $('.content').html('');

        var self = vm;
        self.$set('range', e.target.getAttribute('value'));
        self.curPage = 1;
        self.finish = false;

        dropload.unlock();
        dropload.noData(false);
        dropload.resetload();
    });

    $('#order-list').on('tap', function(e) {
        $('.shutter').css({
            'display': 'none'
        });
        $('#order-msg').text(e.target.innerText);
        $('.content').html('');
        var self = vm;

        self.$set('order', e.target.getAttribute('value'));
        self.curPage = 1;
        self.finish = false;

        dropload.unlock();
        dropload.noData(false);
        dropload.resetload();
    });

    var swiper = new Swiper('.swiper-container', {
        pagination: '.swiper-pagination',
        nextButton: '.swiper-button-next',
        prevButton: '.swiper-button-prev',
        slidesPerView: 1,
        paginationClickable: true,
        spaceBetween: 30,
        loop: true
    });
    /**
     * 绑定上拉下拉刷新事件
     */
    var dropload = $("#taskList").dropload({
        $touchArea: $('.pages'),
        scrollArea: window,
        domUp: {
            domClass: 'dropload-up',
            domRefresh: '<div class="dropload-refresh">↓下拉刷新</div>',
            domUpdate: '<div class="dropload-update">↑释放更新</div>',
            domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>'
        },
        domDown: {
            domClass: 'dropload-down',
            domRefresh: '<div class="dropload-refresh">↑上拉加载更多</div>',
            domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>',
            domNoData: '<div class="dropload-noData">任务都加载完啦</div>'
        },
        autoLoad: true,
        loadDownFn: function(me) {
            var self = vm;
            self.loadDownData(me);
        },
        loadUpFn: function(me) {
            var self = vm;
            self.loadUpData(me);
        }
    });
};

$(document).ready(function() {
    wb = new webLib();
    wb.debug(true);
    wb.init(load, false);
});

/**
 * 发布任务按钮事件监听
 * @param
 * @return
 */
$('.plus').on('tap', function(e) {
    vm.go2ReleaseTask();
    e.preventDefault();
});

/**
 * 打开侧边栏事件按钮监听
 * @param
 * @return
 */
$('.person').on('tap', function(e) {
    vm.openMune();
    e.preventDefault();
});

/**
 * 阻止事件冒泡helper
 * @param  {object} e 事件对象
 * @return
 */
function stopPropagation(e) {
    if (e.stopPropagation) {
        e.stopPropagation();
    } else {
        e.cancelBubble = true;
    }
}

$('.range').on('click', function(e) {
    $('.shutter').css({
        'display': 'block'
    });
    $('#range-list').slideToggle(200);
    stopPropagation(e);
});

$('.order').on('click', function(e) {
    $('.shutter').css({
        'display': 'block'
    });
    $('.order ul').slideToggle(200);
    stopPropagation(e);
});

/**
 * 遮罩层点击事件
 */
$('.shutter').on('tap', function() {
    $(this).css({
        'display': 'none'
    });
    $('.range ul').hide(500);
    $('.order ul').hide(500);
});

/**
 * 点击头像查看用户头像大图
 */
$(document).on('tap', '.headimg', function() {
    var imgSrc = $(this).attr('src');
    var param = {};

    param.remoteUrl = (imgSrc.indexOf(vmData.smImg) != -1) ?
        imgSrc.replace(vmData.smImg, '\.') : imgSrc;
    wb.ImageShow(param);
});

/**
 * 点击任务区域跳转到任务详情
 */
$(document).on('tap', '.item-task', function() {
    vm.keepCurrentData($(this).parents('.item').attr('id'));
});

/**
 * 设置点击头部返回顶部事件
 */
$('.title').tap(function() {
    scroll('0px', 300);
});

/**
 * 选择所在城市
 * @return {[type]} [description]
 */
$('#city-box').tap(function(){
    var data = wb.getData();
    wb.CityChooce(function(city){
        if (city != null) {
            if (city.city_id !== -1 && city.city_name !== '') {
                data.cityInfo = {
                    city_name: city.city_name,
                    city_id: city.city_id
                }
                wb.setData(data, function() {
                   location. reload();
                })
            }
        } else {
            wb.showTip('选取失败,请重试')
        }
    });
});

/**
 * 返回顶部
 * @param  {number} scrollTo 想要返回的位置
 * @param  {number} time     过渡时间
 * @return
 */
function scroll(scrollTo, time) {
    var scrollFrom = parseInt(document.body.scrollTop),
        i = 0,
        runEvery = 5; // run every 5ms

    scrollTo = parseInt(scrollTo);
    time /= runEvery;

    var interval = setInterval(function() {
        i++;

        document.body.scrollTop = (scrollTo - scrollFrom) / time * i + scrollFrom;

        if (i >= time) {
            clearInterval(interval);
        }
    }, runEvery);
}

/**
 * 设置消息提醒
 * @param
 */
function setReddot(flag) {
    if (flag == true) {
        $('.icon-reddot').css('display', 'inline-block');
    } else if (flag == false) {
        $('.icon-reddot').css('display', 'none');
    }
}
