var vmData = {
    newWinCmd: 'demand://', //新建页面前缀
    respLength: 8 //单次响应数组长度
};

var wb, vm;

var load = function() {
    vm = new Vue({
        el: '#app',

        data: function() {
            return {
                items: [
                    [],
                    [],
                    []
                ],
                curPage: 1,
                finish: [false, false, false],
                itemIndex: 0,
                curItem: 0
            };
        },

        created: function() {
            this.loadCurItem();
        },

        methods: {
            loadCurItem: function() {
                var data = wb.getData();
                if (data.attach_curItem !== undefined &&
                    data.attach_curItem !== null &&
                    data.attach_curItem !== '') {
                    this.curItem = data.attach_curItem;
                    this.itemIndex = this.curItem;
                } else {
                    this.curItem = 0;
                }
            },

            /*
             * 向上滑动加载下方的数据
             * @param me : dropload
             * @param status : 请求参数
             * @param index : 数组索引
             */
            loadDownData: function(me, status) {
                var self = this;

                if (self.finish[self.itemIndex] !== true) {
                    var params = {
                        curPage: self.curPage,
                        ZYRJM: window.webEvn.token,
                        url: 'http://www.renrenshangjin.com/index.php?m=Home&c=UserTask&a=getUserPart',
                        status: status
                    };

                    wb.Ajax(params, function(data) {
                        if (data.status == 1) {
                            if (data.tasks !== null && data.tasks.length !== 0) {
                                self.curPage++;

                                $('#lists' + (self.itemIndex + 1)).append(self.dataProcessor(data.tasks));
                            } else {
                                self.finish[self.itemIndex] = true;
                                me.noData();
                            }
                        } else {
                            me.noData();
                        }
                        me.resetload();
                    });
                } else {
                    me.noData();
                    me.resetload();
                }
            },

            /*
             * 向下拉重新加载数据
             * @param me : dropload
             * @param status : 请求状态码
             * @param index : 数组索引
             */
            loadUpData: function(me, status) {
                var self = this;

                self.finish[self.itemIndex] = false;
                self.items.$set(self.itemIndex, []);
                self.curPage = 1;

                var params = {
                    curPage: self.curPage,
                    ZYRJM: window.webEvn.token,
                    url: 'http://www.renrenshangjin.com/index.php?m=Home&c=UserTask&a=getUserPart',
                    status: status
                };

                wb.Ajax(params, function(data) {
                    if (data.status == 1) {
                        if (data.tasks !== null && data.tasks.length !== 0) {
                            self.curPage++;
                            $('#lists' + (self.itemIndex + 1)).html(self.dataProcessor(data.tasks));
                            if (data.tasks.length < vmData.respLength) {
                                $('.dropload-noData').replaceWith('<div class="dropload-noData">任务都加载完啦</div>');
                            } else {
                                $('.dropload-noData').replaceWith('<div class="dropload-refresh">↑上拉加载更多</div>');
                            }
                        } else {
                            self.finish[self.itemIndex] = true;
                            me.noData();
                        }
                    } else {
                        wb.showTip(data.info);
                        me.noData();
                    }
                    me.resetload();
                });
            },

            /**
             * 响应数据处理
             * @param  {array} items - 响应得到的数据
             * @return {string} result - 拼接的html
             *
             */
            dataProcessor: function(items) {
                var self = this;
                var result = '';

                switch (self.itemIndex) {
                    case 0:
                        items.forEach(function(item) {
                            var now = Date.now();
                            var restSecs = item.effictive_time * 60 - (now - item.created_at * 1000) / 1000;
                            var time = self.formatSec(restSecs);

                            result += self.htmlConcat(item, time);
                        });

                        break;
                    case 1:
                    case 2:
                        items.forEach(function(item) {
                            var date = new Date(item.created_at * 1000);

                            var minutes = parseInt(date.getMinutes());
                            if (minutes === 0) {
                                minutes = '00';
                            } else if (minutes < 10) {
                                minutes = '0' + minutes;
                            }
                            var time = date.getFullYear() + '.' + (date.getMonth() + 1) + '.' + (date.getDate()) + ' ' + date.getHours() + ':' + minutes;

                            result += self.htmlConcat(item, time);
                        });
                        break;
                }

                return result;
            },

            /**
             * html拼接
             * @param  {array} item - 单个任务信息
             * @param {string} time - 时间
             * @return
             */
            htmlConcat: function(item, time) {
                return '<a class="item opacity" onClick="getCurrentId(' + item.task_id + ')">' +
                    '<div class="ui-row-flex ui-whitespace finish_msgline border-bottom">' +
                    '<div class="ui-col ui-col-2 ui-nowrap">' + item.title + '</div>' +
                    '<div class="ui-col ui-col">' +
                    '<div class="money">' +
                    '<img src="img/shang.png" class="moneypic">' +
                    '<div class="ui-nowrap moneynumber">' + item.reward + '元' + '</div>' +
                    '</div>' +
                    '<div class="ui-nowrap residual">' + time +
                    '</div></div></div></a>';
            },

            /**
             * 加载上一页数据
             * @return
             */
            loadPreviousData: function(task_id) {
                return wb.getData();
            },

            /*
             * 获取当前任务的ID
             * @param {number} task_id - 任务ID
             */
            getCurrentId: function(task_id) {
                this.keepCurrentData(task_id);
            },

            /*
             * 保存当前页数据
             * @param {number} task_id : 任务ID
             */
            keepCurrentData: function(task_id) {
                var self = this;
                var data = this.loadPreviousData();
                if (data === null) {
                    data = {};
                }
                data.myAttachData_task_id = task_id;
                data.attach_curItem = self.itemIndex;

                // 保存数据后跳转至指定页面
                wb.setData(data, function() {
                    var addr = '';

                    switch (self.itemIndex) {
                        case 0:
                            addr = 'demandAttaching.html';
                            break;
                        case 1:
                            addr = 'demandAttached.html';
                            break;
                        case 2:
                            addr = 'demandAttachUnsolved.html';
                            break;
                    }
                    window.location.href = vmData.newWinCmd + addr;
                });
            },

            /**
             * 剩余时间格式化
             * @param  {number} seconds - 剩余秒数
             * @return
             */
            formatSec: function(seconds) {
                var sec = parseInt(seconds);
                var minutes = 0;
                var hours = 0;

                if (sec > 60) {
                    minutes = parseInt(sec / 60);

                    if (minutes > 60) {
                        hours = parseInt(minutes / 60);
                        minutes = parseInt(minutes % 60);
                    }
                }

                var result = '剩余';

                if (hours > 0) {
                    result += hours + '小时';
                }
                if (minutes > 0) {
                    result += minutes + '分钟';
                }
                if (hours <= 0 && minutes <= 0 && sec > 0) {
                    result += sec + '秒';
                }
                return result;
            },

            /**
             * 关闭当前页面
             * @return
             */
            close: function() {
                var data = wb.getData();
                if (data.attach_curItem !== undefined) {
                    data.attach_curItem = null;
                }
                wb.setData(data, function() {
                    wb.Finish();
                });
            }
        }
    });

    window.webEvn.close = vm.close;

    var dropload = $('.content').dropload({
        $touchArea: $('.pages'),
        scrollArea: window,
        domUp: {
            domClass: 'dropload-up',
            domRefresh: '<div class="dropload-refresh">↓下拉刷新</div>',
            domUpdate: '<div class="dropload-update">↑释放更新</div>',
            domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>'
        },
        domDown: {
            domClass: 'dropload-down',
            domRefresh: '<div class="dropload-refresh">↑上拉加载更多</div>',
            domLoad: '<div class="dropload-load"><span class="loading"></span>加载中...</div>',
            domNoData: '<div class="dropload-noData">任务都加载完啦</div>'
        },
        autoLoad: true,

        loadDownFn: function(me) {
            var self = vm;

            self.loadDownData(me, whichCase(self.itemIndex));
        },

        loadUpFn: function(me) {
            var self = vm;

            self.loadUpData(me, whichCase(self.itemIndex));
        }
    });

    $('.tab .item').on('click', function() {
        var $this = $(this);
        vm.itemIndex = $this.index();

        vm.curPage = 1;
        vm.finish.$set(vm.itemIndex, false);

        $this.addClass('cur').siblings('.item').removeClass('cur');
        $('#lists' + (vm.itemIndex + 1)).show().siblings('.item').hide();
        $('#lists' + (vm.itemIndex + 1)).html('');

        dropload.unlock();
        dropload.noData(false);
        dropload.resetload();
    });

    /*var tab = new fz.Scroll('.ui-tab', {
        role: 'tab',
        autoplay: false,
        indicator: false
    });*/
    (function addCurClass() {
        $($('.tab').children()[vm.curItem]).addClass('cur').siblings('.item').removeClass('cur');
    })();
};

$(document).ready(function() {
    wb = new webLib();
    wb.debug(true);
    wb.init(load, true);
});

/**
 * 判断当前是哪个列表
 * @param  {number} itemIndex - 当前列表下标
 * @return {number} status - 请求状态码
 * @return {number} index - 当前数组下标
 */
function whichCase(itemIndex) {
    var status;

    switch (itemIndex) {
        case 0:
            status = 0;
            break;
        case 1:
            status = 2;
            break;
        case 2:
            status = 3;
            break;
    }

    return status;
}

/**
 * @param  {number} task_id : 当前任务ID
 * @return
 */
function getCurrentId(task_id) {
    vm.getCurrentId(task_id);
}
